{"version":3,"file":"ngx-collapsible.umd.min.js","sources":["~/ngx-collapsible/src/app/modules/collapsible/collapsible.directive.ts","~/ngx-collapsible/src/app/modules/collapsible/collapsible.module.ts"],"sourcesContent":["import { Directive, Input, OnChanges, SimpleChanges, AfterViewInit, ViewContainerRef } from '@angular/core';\nexport class CollapsibleDirective implements OnChanges, AfterViewInit {\n\n   accordion: false;\n   selected: string[] = [];\n\n   openHeaderClass = 'header-open';\n   openContentClass = 'content-open';\n   collapsedHeaderClass = 'header-collapsed';\n   collapsedContentClass = 'content-collapsed';\nprivate headers: HTMLElement[] = [];\nprivate contents: HTMLElement[] = [];\n/**\n * @param {?} viewContainer\n */\nconstructor(private viewContainer: ViewContainerRef) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (this.accordion) { this.selected = this.selected.slice(0, 1); }\n    this.updateView();\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    const /** @type {?} */ element = this.viewContainer.element.nativeElement;\n\n    this.headers = [].slice.call(element.querySelectorAll('[collapsible-header]'));\n    this.contents = [].slice.call(element.querySelectorAll('[collapsible-content]'));\n\n    this.headers.forEach(el => {\n      el.addEventListener('click', () => {\n\n        const /** @type {?} */ key = el.getAttribute('collapsible-header');\n        if (key === null) { return; }\n\n        if (this.accordion) {\n          this.toggleAccordion(key);\n        } else {\n          this.toggleCollapsible(key);\n        }\n\n        this.updateView();\n      });\n\n    });\n\n    this.updateView();\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate toggleCollapsible(key: string) {\n    const /** @type {?} */ index = this.selected.indexOf(key);\n    if (index === -1) {\n      this.selected.push(key);\n    } else {\n      this.selected.splice(index, 1);\n    }\n  }\nprivate toggleAccordion = (key: string) => {\n    if (this.selected[0] === key) {\n      this.selected = [];\n    } else {\n      this.selected = [key];\n    }\n  }\n/**\n * @return {?}\n */\nprivate updateView() {\n\n    this.headers.forEach(el => {\n      const /** @type {?} */ key = el.getAttribute('collapsible-header');\n      const /** @type {?} */ collapse = this.selected.indexOf(key) === -1;\n      this.toggleClasses(el, this.openHeaderClass, this.collapsedHeaderClass, collapse);\n    });\n\n    this.contents.forEach(el => {\n      const /** @type {?} */ key = el.getAttribute('collapsible-content');\n      const /** @type {?} */ collapse = this.selected.indexOf(key) === -1;\n      this.toggleClasses(el, this.openContentClass, this.collapsedContentClass, collapse);\n    });\n\n  }\nprivate toggleClasses = (element: HTMLElement, openClass: string, collapsedClass: string, isCollapsed = true) => {\n\n    const /** @type {?} */ allClasses = element.className.split(' ');\n\n    const /** @type {?} */ classToAdd = isCollapsed ? collapsedClass : openClass;\n    const /** @type {?} */ addIndex = allClasses.indexOf(classToAdd);\n    if (addIndex === -1) { allClasses.push(classToAdd); }\n\n    const /** @type {?} */ classToRemove = isCollapsed ? openClass : collapsedClass;\n    const /** @type {?} */ removeIndex = allClasses.indexOf(classToRemove);\n    if (removeIndex > -1) { allClasses.splice(removeIndex, 1); }\n\n    element.className = allClasses.join(' ');\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngxCollapsible]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'accordion': [{ type: Input },],\n'selected': [{ type: Input },],\n'openHeaderClass': [{ type: Input },],\n'openContentClass': [{ type: Input },],\n'collapsedHeaderClass': [{ type: Input },],\n'collapsedContentClass': [{ type: Input },],\n};\n}\n\nfunction CollapsibleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCollapsibleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCollapsibleDirective.ctorParameters;\n/** @type {?} */\nCollapsibleDirective.propDecorators;\n/** @type {?} */\nCollapsibleDirective.prototype.accordion;\n/** @type {?} */\nCollapsibleDirective.prototype.selected;\n/** @type {?} */\nCollapsibleDirective.prototype.openHeaderClass;\n/** @type {?} */\nCollapsibleDirective.prototype.openContentClass;\n/** @type {?} */\nCollapsibleDirective.prototype.collapsedHeaderClass;\n/** @type {?} */\nCollapsibleDirective.prototype.collapsedContentClass;\n/** @type {?} */\nCollapsibleDirective.prototype.headers;\n/** @type {?} */\nCollapsibleDirective.prototype.contents;\n/** @type {?} */\nCollapsibleDirective.prototype.toggleAccordion;\n/** @type {?} */\nCollapsibleDirective.prototype.toggleClasses;\n/** @type {?} */\nCollapsibleDirective.prototype.viewContainer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CollapsibleDirective } from './collapsible.directive';\nexport class CollapsibleModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [CollapsibleDirective],\n  exports: [CollapsibleDirective],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CollapsibleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCollapsibleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCollapsibleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CollapsibleDirective","viewContainer","_this","this","selected","openHeaderClass","openContentClass","collapsedHeaderClass","collapsedContentClass","headers","contents","toggleAccordion","key","toggleClasses","element","openClass","collapsedClass","isCollapsed","allClasses","className","split","classToAdd","indexOf","push","classToRemove","removeIndex","splice","join","prototype","ngOnChanges","changes","accordion","slice","updateView","ngAfterViewInit","nativeElement","call","querySelectorAll","forEach","el","addEventListener","getAttribute","toggleCollapsible","index","collapse","decorators","type","Directive","args","selector","ctorParameters","ViewContainerRef","propDecorators","Input","CollapsibleModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"qTACA,IAAAA,EAAA,WAcA,SAAAA,EACsBC,GADtB,IAAAC,EAAAC,KACsBA,KAAtBF,cAAsBA,EAZnBE,KAAHC,YAEGD,KAAHE,gBAEqB,cADlBF,KAAHG,iBAEsB,eADnBH,KAAHI,qBAE0B,mBADvBJ,KAAHK,sBAE2B,oBAEjBL,KAAVM,WACUN,KAAVO,YA4CUP,KAAVQ,gBAA4B,SAAAC,GAOpBV,EANKE,SAAS,KAAOQ,EAOvBV,EANKE,YAQLF,EANKE,UAAWQ,IAoBZT,KAAVU,cAA0B,SAAAC,EAAuBC,EAAmBC,EAAwBC,QAA5F,IAAAA,IAA4FA,GAA5F,GASI,IAPMC,EAAaJ,EAAQK,UAAUC,MAAM,KAErCC,EAAaJ,EAAcD,EAAiBD,GAEjC,IADAG,EAAWI,QAAQD,IACbH,EAAWK,KAAKF,GASvC,IAPMG,EAAgBP,EAAcF,EAAYC,EAC1CS,EAAcP,EAAWI,QAAQE,GAQnCC,GAPc,GAAMP,EAAWQ,OAAOD,EAAa,GASvDX,EAPQK,UAAYD,EAAWS,KAAK,aA1ExC3B,EAAA4B,UAAAC,YAAA,SAFGC,GAGK3B,KAFK4B,YAAa5B,KAAKC,SAAWD,KAAKC,SAAS4B,MAAM,EAAG,IAG7D7B,KAFK8B,cAOTjC,EAAA4B,UAAAM,gBAAA,WAAA,IAAAhC,EAAAC,KAHUW,EAAUX,KAAKF,cAAca,QAAQqB,cAM3ChC,KAJKM,WAAauB,MAAMI,KAAKtB,EAAQuB,iBAAiB,yBAKtDlC,KAJKO,YAAcsB,MAAMI,KAAKtB,EAAQuB,iBAAiB,0BAMvDlC,KAJKM,QAAQ6B,QAAQ,SAAAC,GAKnBA,EAJGC,iBAAiB,QAAS,WAM3B,IAJM5B,EAAM2B,EAAGE,aAAa,sBAChB,OAIR7B,IAEAV,EAJK6B,UAKP7B,EAJKS,gBAAgBC,GAMrBV,EAJKwC,kBAAkB9B,GAOzBV,EAJK+B,kBAST9B,KAJK8B,cAGNjC,EAAH4B,UAAAc,kBAAG,SAAA9B,GAQC,IAPM+B,EAAQxC,KAAKC,SAASkB,QAAQV,IACtB,IAOV+B,EACFxC,KAPKC,SAASmB,KAAKX,GASnBT,KAPKC,SAASsB,OAAOiB,EAAO,IAY/B3C,EAAH4B,UAAAK,WAAG,WAAA,IAAH/B,EAAAC,KAUIA,KARKM,QAAQ6B,QAAQ,SAAAC,GASnB,IARM3B,EAAM2B,EAAGE,aAAa,sBACtBG,GAA0C,IAA/B1C,EAAKE,SAASkB,QAAQV,GASvCV,EARKW,cAAc0B,EAAIrC,EAAKG,gBAAiBH,EAAKK,qBAAsBqC,KAW1EzC,KARKO,SAAS4B,QAAQ,SAAAC,GASpB,IARM3B,EAAM2B,EAAGE,aAAa,uBACtBG,GAA0C,IAA/B1C,EAAKE,SAASkB,QAAQV,GASvCV,EARKW,cAAc0B,EAAIrC,EAAKI,iBAAkBJ,EAAKM,sBAAuBoC,QA5EhF,GAiGO5C,EAAP6C,aACEC,KAAMC,EAAAA,UAAWC,OAQjBC,SAPU,uBAIXjD,EAADkD,eAAC,WAAA,QAUAJ,KAAMK,EAAAA,oBAPAnD,EAAPoD,gBAUArB,YATgBe,KAAMO,EAAAA,QAUtBjD,WATe0C,KAAMO,EAAAA,QAUrBhD,kBATsByC,KAAMO,EAAAA,QAU5B/C,mBATuBwC,KAAMO,EAAAA,QAU7B9C,uBAT2BuC,KAAMO,EAAAA,QAUjC7C,wBAT4BsC,KAAMO,EAAAA,SC7GlC,IAAAC,EAAA,kBAAA,aAAA,GAEwCA,EAAxCT,aACEC,KAAMS,EAAAA,SAAUP,OADhBQ,SACEC,EAAAA,cAEFC,cAEc1D,GADd2D,SAES3D,OAIVsD,EAADJ,eAAC,WAAA"}
